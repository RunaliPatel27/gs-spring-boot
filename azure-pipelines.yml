# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: windows-latest

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build Maven Project
    steps:
    - task: Maven@4
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'complete/pom.xml'
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploying jar
  jobs: 
  - deployment: VMDeploy
    displayName: Java spring boot deploy
    environment:
      name: Springboot env
      resourceType: VirtualMachine
    strategy:
        rolling:
          maxParallel: 1  #for percentages, mention as x%
          preDeploy:
            steps:
            - download: current
              artifact: drop
            - script: echo initialize, cleanup, backup, install certs
          deploy:
            steps:
             - script: echo "Hello world"
            # - script: java -jar '$(Pipeline.Workspace)/drop/complete/target/spring-boot-complete-0.0.1-SNAPSHOT.jar'
          routeTraffic:
            steps:
            - script: echo routing traffic
          postRouteTraffic:
            steps:
            - script: echo health check post-route traffic
          on:
            failure:
              steps:
              - script: echo Restore from backup! This is on failure
            success:
              steps:
              - script: echo Notify! This is on success
